swagger: '2.0'
info:
    version: '2022-08-17T21:20:52Z'
    title: 'core'
basePath: '/${basePath}'
schemes:
    - 'https'
paths:
    /v1:
        options:
            consumes:
                - 'application/json'
            produces:
                - 'application/json'
            responses:
                '200':
                    description: '200 response'
                    schema:
                        $ref: '#/definitions/Empty'
                    headers:
                        Access-Control-Allow-Origin:
                            type: 'string'
                        Access-Control-Allow-Methods:
                            type: 'string'
                        Access-Control-Allow-Headers:
                            type: 'string'
            x-amazon-apigateway-integration:
                responses:
                    default:
                        statusCode: '200'
                        responseParameters:
                            method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
                            method.response.header.Access-Control-Allow-Headers:
                                "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token
                                '"
                            method.response.header.Access-Control-Allow-Origin: "'*'"
                requestTemplates:
                    application/json: '{"statusCode": 200}'
                passthroughBehavior: 'when_no_match'
                type: 'mock'

    /v1/create-link:
        post:
            consumes:
                - 'application/json'
            produces:
                - 'application/json'
            responses:
                '200':
                    description: '200 response'
                    schema:
                        $ref: '#/definitions/Empty'
                    headers:
                        Access-Control-Allow-Origin:
                            type: 'string'
            x-amazon-apigateway-integration:
                httpMethod: 'POST'
                uri: 'arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/${LAMBDA_CREATE_LINK_FUNCTION_ARN}/invocations'
                responses:
                    default:
                        statusCode: '200'
                        responseParameters:
                            method.response.header.Access-Control-Allow-Origin: "'*'"
                requestTemplates:
                    application/json: |
                        {
                        "method": "$context.httpMethod",
                        "body": $input.json('$'),
                        "headers": {
                            #foreach($param in $input.params().header.keySet())
                            "$param": "$util.escapeJavaScript($input.params().header.get($param))"
                            #if($foreach.hasNext),#end
                            #end
                        },
                        "queryStringParameters": {
                            #foreach($key in $input.params().querystring.keySet())
                            "$key": "$util.escapeJavaScript($input.params().querystring.get($key))"
                            #if($foreach.hasNext),#end
                            #end
                        },
                        "multiValueQueryStringParameters": {
                            #foreach($key in $method.request.multivaluequerystring.keySet())
                            "$key": [
                                #foreach($val in $method.request.multivaluequerystring.get($key))
                                "$util.escapeJavaScript($val)"#if($foreach.hasNext),#end
                                #end
                            ]#if($foreach.hasNext),#end
                            #end
                        },
                        "source-ip": "$context.identity.sourceIp",
                        "user-agent": "$context.identity.userAgent",
                        "resource-path": "$context.resourcePath"
                        }
                passthroughBehavior: 'when_no_templates'
                contentHandling: 'CONVERT_TO_TEXT'
                type: 'aws'
        options:
            consumes:
                - 'application/json'
            produces:
                - 'application/json'
            responses:
                '200':
                    description: '200 response'
                    schema:
                        $ref: '#/definitions/Empty'
                    headers:
                        Access-Control-Allow-Origin:
                            type: 'string'
                        Access-Control-Allow-Methods:
                            type: 'string'
                        Access-Control-Allow-Headers:
                            type: 'string'
            x-amazon-apigateway-integration:
                responses:
                    default:
                        statusCode: '200'
                        responseParameters:
                            method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
                            method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
                            method.response.header.Access-Control-Allow-Origin: "'*'"
                requestTemplates:
                    application/json: '{"statusCode": 200}'
                passthroughBehavior: 'when_no_match'
                type: 'mock'

definitions:
    Empty:
        type: 'object'
        title: 'Empty Schema'